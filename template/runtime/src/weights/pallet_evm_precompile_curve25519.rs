
//! Autogenerated weights for `pallet_evm_precompile_curve25519`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 32.0.0
//! DATE: 2025-08-10, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `MacBook-Pro.local`, CPU: `<UNKNOWN>`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: 1024

// Executed Command:
// frame-omni-bencher
// v1
// benchmark
// pallet
// --runtime
// ./target/release/wbuild/frontier-template-runtime/frontier_template_runtime.compact.compressed.wasm
// --output
// ./template/runtime/src/weights/
// --pallet
// pallet_evm_precompile_curve25519
// --extrinsic
// *

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_evm_precompile_curve25519`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_evm_precompile_curve25519::WeightInfo for WeightInfo<T> {
	/// The range of component `n` is `[1, 10]`.
	fn curve25519_add_n_points(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_000_000 picoseconds.
		Weight::from_parts(5_399_134, 0)
			.saturating_add(Weight::from_parts(0, 0))
			// Standard Error: 8_395
			.saturating_add(Weight::from_parts(5_153_957, 0).saturating_mul(n.into()))
	}
	fn curve25519_scaler_mul() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 81_000_000 picoseconds.
		Weight::from_parts(87_000_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
	}
}
